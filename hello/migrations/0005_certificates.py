# Generated by Django 2.0.4 on 2018-04-12 02:45
import json
from django.db import migrations, models

def populateCertificate_db(apps, schema_editor):
    Certificates = apps.get_model('hello', 'Certificates', require_ready=True)

    # opens json of certificates 
    data = json.load(open('cert.json'))

    # iterates through each certificate and adds them to Certificates models
    for i in range(len(data)):
        newCertificate = Certificates()

            # immediately accessible fields
        newCertificate.title = data[i]['name']
        newCertificate.code = data[i]['code']
        newCertificate.link_page = data[i]['urls'][0]
        newCertificate.contact_name = data[i]['contacts'][0]['name']
        newCertificate.contact_email = data[i]['contacts'][0]['email']
        newCertificate.total_courses = data[i]['tot_needed']
        newCertificate.description = data[i]['description']
        newCertificate.track1 = ''
        newCertificate.track2 = ''
        newCertificate.track3 = ''
        newCertificate.track4 = ''
        newCertificate.track5 = ''
        newCertificate.track6 = ''

        # populate data for tracks
        for j in range(len(data[i]['req_list'])):
            infoString = data[i]['req_list'][j]['name'] + '*' + str(data[i]['req_list'][j]['max_counted']) + '*' + str(data[i]['req_list'][j]['min_needed']) + '*' + str(data[i]['req_list'][j]['double_counting_allowed'])[0].upper() + '*' + str(data[i]['req_list'][j]['pdfs_allowed'])[0].upper()
            coursesString = ''
            for k in range(len(data[i]['req_list'][j]['course_list'])):
                if coursesString == '':
                    coursesString += '*' + data[i]['req_list'][j]['course_list'][k]
                else:
                    coursesString += '%' + data[i]['req_list'][j]['course_list'][k]
            infoString += coursesString

            if j == 0:
                newCertificate.track1 = infoString
            elif j == 1:
                newCertificate.track2 = infoString
            elif j == 2:
                newCertificate.track3 = infoString
            elif j == 3:
                newCertificate.track4 = infoString
            elif j == 4:
                newCertificate.track5 = infoString
            else:
                newCertificate.track6 += infoString

        newCertificate.save()

class Migration(migrations.Migration):

    dependencies = [
        ('hello', '0004_remove_certs_departmenthead'),
    ]

    operations = [
        migrations.CreateModel(
            name='Certificates',
            fields=[
                ('title', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=5)),
                ('link_page', models.URLField()),
                ('contact_name', models.CharField(max_length=255)),
                ('contact_email', models.EmailField(max_length=254)),
                ('total_courses', models.IntegerField()),
                ('description', models.CharField(max_length=10000)),
                ('track1', models.CharField(max_length=1000)),
                ('track2', models.CharField(max_length=1000)),
                ('track3', models.CharField(max_length=1000)),
                ('track4', models.CharField(max_length=1000)),
                ('track5', models.CharField(max_length=1000)),
                ('track6', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'certificates',
            },
        ),
        migrations.RunPython(populateCertificate_db)
    ]
